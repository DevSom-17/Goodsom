<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.goodsom.dao.mybatis.mapper.OrderMapper">
  <sql id="BaseColumns">
  	orderId, userId,
  	name, phone, bank, account,
  	address, detailAddress, extraAddress, postcode,
  	depositTime, depositCheck, isDelivered,
  	totalPrice, orderDate <!-- 승인 일시 -->
  </sql>
  
  <select id="getOrder" parameterType="int" resultType="com.example.goodsom.domain.Order">
  	SELECT <include refid="BaseColumns" />
  	FROM orders
  	WHERE orderId = #{orderId}
  </select>
  
  <select id="getOrdersByGroupBuyId" parameterType="int" resultType="com.example.goodsom.domain.Order">
  	SELECT <include refid="BaseColumns" />
  	FROM orders
  	WHERE orderId IN (SELECT DISTINCT orderId
  					 FROM 	lineGroupBuys
  					 WHERE groupBuyId = #{groupBuyId})
  </select>
  
  <select id="getOrdersByAuctionId" parameterType="int" resultType="com.example.goodsom.domain.Order">
  	SELECT <include refid="BaseColumns" />
  	FROM orders
  	WHERE orderId IN (SELECT orderId
  					 FROM 	successBidders
  					 WHERE auctionId = #{auctionId})
  </select>
  
  <resultMap id="lineGroupBuyResultMap" type="com.example.goodsom.domain.Order">
		<id column="orderId" property="orderId" />
		<result column="userId" property="userId" />
		<result column="name" property="name" />
		<result column="phone" property="phone" />
		<result column="bank" property="bank" />
		<result column="account" property="account" />
		<result column="address" property="address" />
		<result column="detailAddress" property="detailAddress" />
		<result column="extraAddress" property="extraAddress" />
		<result column="postcode" property="postcode" />
		<result column="depositTime" property="depositTime" />
		<result column="depositCheck" property="depositCheck" />
		<result column="isDelivered" property="isDelivered" />
		<result column="totalPrice" property="totalPrice" />
		<result column="orderDate" property="orderDate" />
		
  		<collection property="lineGroupBuys" ofType="com.example.goodsom.domain.LineGroupBuy">
  			<id property="lineId" column="lineId" />
  			<result property="orderId" column="line_orderId" />
  			<result property="groupBuyId" column="groupBuyId" />
  			<result property="quantity" column="quantity" />
  			<result property="selectOption" column="selectOption" />
  			<result property="unitPrice" column="unitPrice" />
  		</collection>
  </resultMap> 
  
  <select id="getOrderWithLineGroupBuys" parameterType="int" resultMap="lineGroupBuyResultMap">
  	SELECT o.orderId, o.userId, o.name, o.phone, o.bank, o.account,
  		   o.address, o.detailAddress, o.extraAddress, o.postcode,
  		   o.depositTime, o.depositCheck, o.isDelivered, o.totalPrice, o.orderDate,
  		   l.lineId, l.orderId AS line_orderId, l.groupBuyId, l.quantity, l.selectOption, l.unitPrice
  	FROM orders o, lineGroupBuys l
  	WHERE o.orderId = l.orderId AND o.orderId = #{orderId}
  </select>

  <insert id="createOrder" parameterType="com.example.goodsom.domain.Order"
  		useGeneratedKeys="true" keyProperty="orderId">
  	INSERT INTO orders (userId, 
  						name, phone, bank, account,
  						address, detailAddress, extraAddress, postcode,
  						depositTime, depositCheck, isDelivered,
  						totalPrice, orderDate)
  	VALUES (#{userId}, 
  		#{name}, #{phone}, #{bank}, #{account},
  		#{address}, #{detailAddress}, #{extraAddress}, #{postcode},
  		#{depositTime}, #{depositCheck}, #{isDelivered}, 
  		#{totalPrice}, curdate())
  </insert>
  
  <select id="getGroupBuyId" parameterType="int" resultType="int">
  	SELECT DISTINCT groupBuyId
	FROM lineGroupBuys
	WHERE orderId = #{orderId}
  </select>
  
  <select id="getAuctionId" parameterType="int" resultType="int">
  	SELECT auctionId
	FROM successBidders
	WHERE orderId = #{orderId}
  </select>
  
  <delete id="deleteOrderByUserId" parameterType="Integer">
  	DELETE FROM ORDERS
  	WHERE USERID = #{userId}
  </delete>
  
 </mapper>