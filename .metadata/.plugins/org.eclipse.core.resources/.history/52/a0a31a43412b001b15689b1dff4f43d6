<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- AuctionMapper 인터페이스의 package이름과 같아야 함 -->
<mapper namespace="com.example.goodsom.dao.mybatis.mapper.AuctionMapper">

  <resultMap id="resultMap" type="com.example.goodsom.domain.Auction">
  	<id column="auctionId" property="auctionId" />
  	<result column="title" property="title" />
  	<result column="content" property="content" />
  	<result column="img" property="img" />
  	<result column="startPrice" property="startPrice" />
  	<result column="uploadDate" property="uploadDate" />
  	<result column="endDate" property="endDate" />
  	<result column="count" property="count" />
  	<result column="maxPrice" property="maxPrice" />
  	<result column="state" property="state" />
  	<result column="receive" property="receive" />
  	<result column="menuId" property="menuId" />
  	<result column="writerId" property="userId" />
  	<collection property="bids" ofType="com.example.goodsom.domain.Bid">
  		<id property="bidId" column="bidId"/>
  		<result property="bidPrice" column="bidPrice"/>
  	</collection>
  </resultMap>
  
  
  <select id="getAuction" parameterType="java.lang.Integer" resultType="com.example.goodsom.domain.Auction"> <!-- bid없는 Auction객체 위해 필요 -->
    SELECT auctionId, title, content, img, startPrice, uploadDate, endDate, count,
    		maxPrice, state, receive, menuId, userId, sendNoti
    FROM AUCTIONS
    WHERE auctionId = #{auctionId}
  </select>
  
  <select id="getAuctionWithBids" parameterType="java.lang.Integer" resultMap="resultMap"> <!-- bid있는 Auction객체, 경매 결제에서 이용 -->
    SELECT a.auctionId, a.title, a.content, a.img, a.startPrice, a.uploadDate, a.endDate, a.count,
    		a.maxPrice, a.state, a.receive, a.menuId, a.userId AS writerId, b.bidId, b.bidPrice
    FROM AUCTIONS a, BIDS b
    WHERE a.auctionId = b.auctionId AND a.auctionId = #{auctionId}
  </select>
  
  <insert id="createAuction" parameterType="com.example.goodsom.domain.Auction">
  	<selectKey keyProperty="auctionId" resultType="int" order="BEFORE">
  		SELECT LAST_INSERT_ID()
     </selectKey>
  	INSERT INTO AUCTIONS
	VALUES (#{auctionId}, #{title}, #{content}, #{img}, #{startPrice}, 
			#{uploadDate}, #{endDate}, #{count}, #{maxPrice}, #{state}, #{menuId}, #{userId}, #{sendNoti})
  </insert>
  
  <update id="updateAuction" parameterType="com.example.goodsom.domain.Auction">
   	UPDATE AUCTIONS
    SET title=#{title}, content=#{content}, img=#{img}, startPrice=#{startPrice}, 
 		ENDDATE=#{endDate}, MAXPRICE=#{maxPrice}, state=#{state}
  	WHERE  AUCTIONID=#{auctionId}
  </update>
  
  <update id="updateAuctionMaxPrice" parameterType="com.example.goodsom.domain.Auction">
  	UPDATE AUCTIONS
	SET MAXPRICE = #{param1}
	WHERE AUCTIONID = #{param2}
  </update>
   
  <delete id="deleteAuction" parameterType="java.lang.Integer">
    DELETE FROM AUCTIONS
    WHERE  AUCTIONID=#{auctionId}
  </delete>
  
  <delete id="deleteAuctionByUserId" parameterType="java.lang.Integer">
    DELETE FROM AUCTIONS
    WHERE  USERID = #{userId}
  </delete>
  
  <!-- Get all auctions -->
  <select id="getAuctionList" resultType="com.example.goodsom.domain.Auction">
    SELECT auctionId, title, content, img, startPrice, uploadDate, endDate, count,
    		maxPrice, state, receive, menuId, userId
    FROM AUCTIONS
    ORDER BY uploadDate DESC
  </select>
  
  <!-- Search auctions by Keyword -->
  <select id="auctionListByKeyword" resultType="com.example.goodsom.domain.Auction">
  	<bind name="pattern" value="'%' + _parameter + '%'" />
	  	SELECT auctionId, title, content, img, startPrice, uploadDate, endDate, count,
    		maxPrice, state, receive, menuId, userId, sendNoti
    	FROM AUCTIONS
	    WHERE title LIKE #{pattern}
  </select>
  
  <update id="increaseCount" parameterType="com.example.goodsom.domain.Auction">
  	UPDATE AUCTIONS
  	SET  COUNT=#{count}
  	WHERE AUCTIONID=#{auctionId}
  </update>
  
  <update id="closeEvent" parameterType="Date">
    <![CDATA[
     UPDATE AUCTIONS SET STATE = 'closed'
     WHERE ENDDATE <= #{curTime} AND sendNoti=0
    ]]>
  </update>
  
    <!-- 알림을 보낸 후 sendNoti를 1로 업데이트 -->
  <update id="updateAuctionNoti" parameterType="Integer">
  	UPDATE AUCTIONS
  	SET sendNoti=1
  	WHERE AUCTIONID=#{auctionId}
  </update>
  
  <!-- 경매가 마감된 이후에 알림을 보내기 위한 쿼리 -->
  <select id="getAuctionIdForNoti" resultType="Integer">
	  	SELECT auctionId
    	FROM AUCTIONS
	    WHERE STATE = 'closed' AND sendNoti=0
  </select>
  
  
  <select id="getRecentAuctionList" resultType="com.example.goodsom.domain.Auction">
   <![CDATA[
    SELECT EX1.* FROM
    	(SELECT * FROM AUCTIONS
    	 ORDER BY COUNT DESC) EX1
    LIMIT 3
   ]]>
  </select>
  
 <select id="getSuccessBidderUserId" parameterType="int" resultType="Integer">
 	SELECT DISTINCT b.userId
	FROM AUCTIONS a, BIDS b
	WHERE a.auctionId = b.auctionId AND a.maxPrice = b.bidPrice AND a.auctionId = #{auctionId}
 </select>
</mapper>